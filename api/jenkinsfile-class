pipeline {
    agent {
        node {
            label 'docker-slave'
        }
    }
    
    environment {
        dockerhub = credentials('dockerhub')
    }


    stage('Creating database container') {
            steps {
                sh 'docker container rm --force lmsdb'
                sh 'docker run -d -p 5432:5432 --network lms-appnetwork -e POSTGRES_PASSWORD=password --name lmsdb postgres'
            }
        }


    stages {
        stage('Docker backend image Build') {
            steps {
                sh 'cd api && docker build -t yellaiahdocker/api .'
            }
        }

        stage('Docker remove backend  container') {
            steps {
                sh 'docker container rm -f api2'
            }
        }

        stage('Running the docker container') {
            steps {
                sh 'docker container rm --force api2'
                sh 'docker run -d -p 8080:8080 --network lms-appnetwork -e DATABASE_URL=postgresql://postgres:password@lmsdb:5432/postgres --name backend -e PORT=3000 -e MODE=local yellaiahdocker/api'
            }
        }

         stage('Docker run container') {
            steps {
                sh 'docker container run -dt --name api2 -p 3000:3000 muralialakuntla3/api'
            }
        }

        stage('Docker Login') {
            steps {
                sh 'echo $dockerhub_PSW | docker login -u $dockerhub_USR --password-stdin'
            }
        }

        stage('Docker Push') {
            steps {
                sh 'docker push muralialakuntla3/api'
            }
        }

        stage('Remove old docker images') {
            steps {
                sh 'docker rmi -f muralialakuntla3/api'
            }
        }

        
        
    }
}
