pipeline {
    agent{
       label 'k8s'

     }

    environment {

    DOCKERHUB_CREDENTIALS = credentials('docker-hub')
     registry = "yellaiahdocker/k8s-api"
        registryCredential = 'docker-hub'
        dockerImage = ''
    }

    stages {

        stage('Building the docker image') {
            steps {
                sh 'cd api && docker build -t yellaiahdocker/k8s-api .'
            }
        }
        stage('Logging into dockerhub account') {
            steps {
                sh 'echo $DOCKERHUB_CREDENTIALS_PSW | docker login -u $DOCKERHUB_CREDENTIALS_USR --password-stdin'
            }
        }
        stage('pushing the docker image into dockerhub') {
            steps {
                  sh 'docker push yellaiahdocker/k8s-api'
            }
        }
        stage('Remove old docker images') {
             steps {
                 sh 'docker rmi -f yellaiahdocker/k8s-api'

            }
        }
         stage('Running on kubernetes') {
            steps {
                echo 'Deploying....'
                sh "cd api && kubectl apply -f postgres-deployment.yaml"
                 sh "cd api && kubectl apply -f postgres-cluster-ip-service.yaml"
                sh "cd api && kubectl apply -f api-deployment.yaml"
                sh "cd api && kubectl apply -f api-load-balancer-service.yaml"
                sh "kubectl rollout restart deployment api-deployment"
            }
        }
    }
}
